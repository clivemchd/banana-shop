app NanoStudio {
	wasp: {
		version: "^0.17.1"
	},
	title: "Nano Studio",
	head: [
		"<link rel='icon' type='image/svg+xml' href='/logo.svg' />",
	],
	auth: {
		userEntity: Users,
		methods: {
			email: {
				fromField: {
					name: "NanoStudio",
					email: "noreply@nanostudio.com"
				},
				emailVerification: {
					clientRoute: EmailVerificationRoute,
					getEmailContentFn: import { getVerificationEmailContent } from "@src/server/auth/email",
				},
				passwordReset: {
					clientRoute: PasswordResetRoute,
					getEmailContentFn: import { getPasswordResetEmailContent } from "@src/server/auth/email",
				},
				userSignupFields: import { getEmailUserFields } from "@src/client/pages/auth/user-signup-fields",
			},
			google: {
				configFn: import { getConfig } from "@src/server/auth/google",
				userSignupFields: import { userSignupFields } from "@src/server/auth/google"
			}
		},
		onAuthFailedRedirectTo: "/signin",
		onAuthSucceededRedirectTo: "/dashboard"
	},
	emailSender: {
		provider: Dummy,
		defaultFrom: {
			name: "Nano Studio",
			email: "me@example.com"
    	},
	}
}

route SignUpPageRoute { path: "/signup", to: SignUpPage }
page SignUpPage {
  component: import { SignUpPage } from "@src/client/pages/auth/sign-up"
}

route SignInPageRoute { path: "/signin", to: SignInPage }
page SignInPage {
  component: import { SignInPage } from "@src/client/pages/auth/sign-in"
}

route ForgotPasswordRoute { path: "/forgot-password", to: ForgotPasswordPage }
page ForgotPasswordPage {
  component: import { ForgotPasswordPage } from "@src/client/pages/auth/forgot-password"
}

route PasswordResetRoute { path: "/password-reset", to: PasswordResetPage }
page PasswordResetPage {
  component: import { PasswordResetPage } from "@src/client/pages/auth/password-reset"
}

route EmailVerificationRoute { path: "/email-verification", to: EmailVerificationPage }
page EmailVerificationPage {
  component: import { EmailVerificationPage } from "@src/client/pages/auth/email-verification"
}

route LandingPageRoute { path: "/", to: LandingPage }
page LandingPage {
  component: import { LandingPage } from "@src/client/pages/landing/landing-page"
}

route DashboardPageRoute { path: "/dashboard", to: DashboardPage }
page DashboardPage {
	authRequired: true,
	component: import { DashboardPage } from "@src/client/pages/dashboard/dashboard"
}

route PricingPageRoute { path: "/pricing", to: PricingPage }
page PricingPage {
	component: import { PricingPage } from "@src/payment/pricing-page"
}

route CheckoutPageRoute { path: "/checkout", to: CheckoutPage }
page CheckoutPage {
	component: import CheckoutPage from "@src/payment/checkout-page"
}

query generateTextToImage {
	fn: import { generateTextToImage } from "@src/server/fal-test"
}

query generateImageToImage {
	fn: import { generateImageToImage } from "@src/server/fal-test"
}

// Payment operations
action generateCheckoutSession {
	fn: import { generateCheckoutSession } from "@src/payment/operations",
	entities: [Users]
}

query getCustomerPortalUrl {
	fn: import { getCustomerPortalUrl } from "@src/payment/operations",
	entities: [Users]
}

query getLaunchSettings {
	fn: import { getLaunchSettings } from "@src/server/launch-settings"
}

// Stripe webhook
api paymentsWebhook {
	fn: import { stripeWebhook } from "@src/payment/stripe/webhook",
	entities: [Users],
	httpRoute: (POST, "/payments-webhook")
}