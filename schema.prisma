datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Image {
	id          String   @id @default(uuid())
	url         String   // Final GCS URL
	originalUrl String?  // Original image URL (if uploaded)
	description String?  // User-provided or AI-generated description
	fileName    String   // Display name
	mimeType    String   // image/png, image/jpeg, etc.
	isPublic    Boolean  @default(false) // For future sharing features
	userId      String
	user        Users    @relation(fields: [userId], references: [id])
	createdAt   DateTime @default(now())
	updatedAt   DateTime @updatedAt
	
	// Link to edit history
	editHistory ImageEdit[]
}

model Users {
	id String @id @default(uuid())
	images Image[]
	tempImages TempImage[]
	imageEdits ImageEdit[]
	isAdmin  Boolean @default(false)
	email String @unique
	name String? 
	username String? @unique
	profileImage String?
  	paymentProcessorUserId String? @unique
	subscriptionStatus String?
	subscriptionPlan String?
	billingCycle String? // 'monthly' or 'annual'
	isPlanRenewed Boolean @default(true)
	datePaid DateTime?
	billingEndDate DateTime?
	credits Int @default(0)
	// Fields for scheduled plan changes
	scheduledPlanId String? // The plan that will be activated
	scheduledBillingCycle String? // The billing cycle for the scheduled plan
	scheduledStartDate DateTime? // When the scheduled plan will start
}

model TempImage {
	id        String   @id @default(uuid())
	url       String   // Temporary GCS URL
	fileName  String   
	mimeType  String   
	size      Int      // File size in bytes
	userId    String?  // Allow nullable for unauthenticated users
	user      Users?   @relation(fields: [userId], references: [id])
	createdAt DateTime @default(now())
	expiresAt DateTime // Auto-cleanup after 24 hours
}

model ImageEdit {
	id          String   @id @default(uuid())
	imageId     String
	image       Image    @relation(fields: [imageId], references: [id], onDelete: Cascade)
	editType    String   // 'generation', 'region_edit', 'filter', etc.
	prompt      String?  // The prompt used for this edit
	beforeUrl   String?  // Image state before this edit
	afterUrl    String   // Image state after this edit
	userId      String
	user        Users    @relation(fields: [userId], references: [id])
	createdAt   DateTime @default(now())
}